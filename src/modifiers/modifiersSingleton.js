"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.modifiers = void 0;
var modifier_1 = require("./modifier");
var effectsSingleton_1 = require("./../modifiers/effectsSingleton");
var weightedList_1 = require("../core/weightedList");
//TODO Make this cleaner
var mods = new weightedList_1.WeightedList();
var nightly = new modifier_1.Modifier();
nightly.powerMultiplier = function () { return 1.35; };
nightly.namePrefix = 'Nightly';
nightly.description = 'Can be used only in the night.';
nightly.longDescription = 'Can be also used on planes without sun.';
nightly.type = modifier_1.Modifier.Type.Constraint;
mods.push(nightly);
var bloodied = new modifier_1.Modifier();
bloodied.powerMultiplier = function () { return 1.5; };
bloodied.namePrefix = 'Bloody';
bloodied.description = 'Can be used only when you have half or less Health.';
bloodied.longDescription = '';
bloodied.type = modifier_1.Modifier.Type.Constraint;
mods.push(bloodied);
var ultimate = new modifier_1.Modifier();
ultimate.powerMultiplier = function () { return 2.5; };
ultimate.namePrefix = 'Ultimate';
ultimate.description = 'Can be used on turn 8 or later.';
ultimate.longDescription = '';
ultimate.type = modifier_1.Modifier.Type.Constraint;
mods.push(ultimate);
var signature = new modifier_1.Modifier();
signature.powerMultiplier = function () { return 1.2; };
signature.namePrefix = 'Signature';
signature.description = 'Only one player can use Signature power in a single round.';
signature.longDescription = '';
signature.type = modifier_1.Modifier.Type.Constraint;
mods.push(signature);
var layline = new modifier_1.Modifier();
layline.powerMultiplier = function (x) { return x.range ? Math.max(1.1, 2.4 - x.range / 10) : 1; };
1.7;
layline.namePrefix = 'Layline';
layline.description = 'Can be used while adjacent to place of power.';
layline.longDescription = '';
layline.type = modifier_1.Modifier.Type.Constraint;
mods.push(layline);
var doubleStrike = new modifier_1.Modifier();
doubleStrike.powerMultiplier = function () { return 0.4; };
doubleStrike.namePrefix = 'Double Strike';
doubleStrike.description = 'After this action, repeat this action once, without paying any costs. You cannot change targets.';
doubleStrike.longDescription = '';
doubleStrike.type = modifier_1.Modifier.Type.Improvement;
mods.push(doubleStrike);
var cleave = new modifier_1.Modifier();
cleave.powerMultiplier = function () { return 0.5; };
cleave.namePrefix = 'Cleave';
cleave.description = 'After this action, repeat this action once, without paying any costs. The repeated action must change the target to an adjacent one to you or initial target.';
cleave.longDescription = '';
cleave.type = modifier_1.Modifier.Type.Improvement;
mods.push(cleave);
var fast = new modifier_1.Modifier();
fast.powerMultiplier = function () { return 0.5; };
fast.namePrefix = 'Fast';
fast.description = 'Once per turn when you use Fast Action, gain Action.';
fast.longDescription = '';
fast.type = modifier_1.Modifier.Type.Improvement;
mods.push(fast);
var applyEffect = new modifier_1.Modifier();
applyEffect.namePrefix = '';
applyEffect.description = 'There is a chance to apply following effect, when you hit:';
applyEffect.longDescription = '';
applyEffect.type = modifier_1.Modifier.Type.Improvement;
applyEffect.weight = mods.items.length / 3;
applyEffect.effect = effectsSingleton_1.effects.get();
mods.push(applyEffect);
exports.modifiers = mods;
